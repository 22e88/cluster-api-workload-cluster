---
- name: create workload cluster using the KinD management cluster 
  hosts: mgmtcp0

  # The following environment settings define the base configuration of the 
  # workload cluster to be created:
  # NOTE: HCLOUD_REGION has to be the same as the region of mgmtcp0 
  environment:
    HCLOUD_SSH_KEY: "{{ HCLOUD_SSH_KEY }}"
    CLUSTER_NAME: "{{ CLUSTER_NAME }}"
    HCLOUD_REGION: "{{ HCLOUD_REGION }}"
    CONTROL_PLANE_MACHINE_COUNT: "{{ CONTROL_PLANE_MACHINE_COUNT }}"
    WORKER_MACHINE_COUNT: "{{ WORKER_MACHINE_COUNT }}"
    KUBERNETES_VERSION: "{{ KUBERNETES_VERSION }}"
    HCLOUD_CONTROL_PLANE_MACHINE_TYPE: "{{ HCLOUD_CONTROL_PLANE_MACHINE_TYPE }}"
    HCLOUD_WORKER_MACHINE_TYPE: "{{ HCLOUD_WORKER_MACHINE_TYPE }}"
    SSH_KEY_NAME: "{{ SSH_KEY_NAME }}"

  tasks: 
    - name: add Cilium Helm repo on mgmtcp0
      kubernetes.core.helm_repository:
        name: cilium
        repo_url: "https://helm.cilium.io/"

    - name: add Syself Helm repo on mgmtcp0
      kubernetes.core.helm_repository:
        name: syself
        repo_url: "https://charts.syself.com/"

    - name: add Hetzner HCloud Helm repo on mgmtcp0 (for HCloud CSI storage driver)
      kubernetes.core.helm_repository:
        name: hcloud
        repo_url: "https://charts.hetzner.cloud"

    - name: create directory for CAPH project
      ansible.builtin.file:
        state: directory
        path: cluster-api-provider-hetzner 

      # later on we need a cilium.yaml file, which currently can be found
      # in Syself's cluster-api-provider-hetzner project, therefor we download
      # that project:
    - name: git clone Syself's cluster-api-provider-hetzner project
      ansible.builtin.git:
        repo: https://github.com/syself/cluster-api-provider-hetzner.git
        dest: cluster-api-provider-hetzner

    - name: create config yaml for workload cluster object
      ansible.builtin.shell: "clusterctl generate cluster {{ CLUSTER_NAME }} > {{ CLUSTER_NAME }}.yaml"

    - name: apply workload cluster yaml to KinD management cluster
      ansible.builtin.command:
        cmd: "kubectl apply -f {{ CLUSTER_NAME }}.yaml"

    - name: wait for workload cluster objects to be created in HCloud
      ansible.builtin.wait_for:
        timeout: 180
      delegate_to: localhost

    - name: get KUBECONFIG of workload cluster
      ansible.builtin.shell:
        cmd: "clusterctl get kubeconfig {{ CLUSTER_NAME }} > {{ CLUSTER_NAME }}.kubeconfig"

    - name: fix permissions of kubeconfig file to prevent Ansible from error exit
      ansible.builtin.file:
        path: "{{ CLUSTER_NAME }}.kubeconfig"
        mode: '0600'

    - name: install Cilium to workload cluster
      ansible.builtin.shell: 
        cmd: "KUBECONFIG=./{{ CLUSTER_NAME }}.kubeconfig helm upgrade --install cilium cilium/cilium --version 1.14.4 --namespace kube-system -f cluster-api-provider-hetzner/templates/cilium/cilium.yaml"

    - name: install HCloud CCM to workload cluster
      ansible.builtin.shell:
        cmd: "KUBECONFIG=./{{ CLUSTER_NAME }}.kubeconfig helm upgrade --install ccm syself/ccm-hcloud --version 1.0.11 --namespace kube-system --set secret.name=hcloud --set secret.tokenKeyName=token --set privateNetwork.enabled=false"

    - name: install HCloud CSI storage driver to workload cluster
      ansible.builtin.shell:
        cmd: "KUBECONFIG=./{{ CLUSTER_NAME }}.kubeconfig helm install hcloud-csi hcloud/hcloud-csi --version 2.9.0 --namespace kube-system --set secret.name=hcloud --set secret.tokenKeyName=token"
